
connect sys as sysdba;

create user fortisbank identified by 123;

grant connect, resource to fortisbank;

grant all privileges to fortisbank;

connect
--Enter user-name: fortisbank
--Enter password:
--Connected.


--TABLES

-- CUSTOMER 
CREATE TABLE CUSTOMER
(
    CUSTOMER_ID NUMBER(10) CONSTRAINT PK_CUST_ID PRIMARY KEY, CONSTRAINT CUST_ID_CHECK CHECK(CUSTOMER_ID <= 100000),
    FIRST_NAME  VARCHAR2(50) CONSTRAINT FIRST_NAME_CUST NOT NULL,
    LAST_NAME  VARCHAR2(50) CONSTRAINT LAST_NAME_CUST NOT NULL,
	SIN NUMBER(9) UNIQUE,
	CREATED_ON DATE DEFAULT sysdate,
	UPDATED_ON DATE DEFAULT sysdate
);



-- ACCOUNT
CREATE TABLE ACCOUNT
(
    ACCOUNT_NUM NUMBER(10) CONSTRAINT PK_ACC_NUM PRIMARY KEY, CONSTRAINT ACC_NUM_CHECK CHECK(ACCOUNT_NUM <= 100000),
	ACCOUNT_CUST_ID NUMBER(10) NOT NULL,
    CONSTRAINT FK_ACC_CUST_ID FOREIGN KEY (ACCOUNT_CUST_ID) REFERENCES CUSTOMER(CUSTOMER_ID) ON DELETE CASCADE,
	ACC_TYPE VARCHAR2(20) CONSTRAINT N_ACC_TYPE NOT NULL, CONSTRAINT ACC_TYPE CHECK(ACC_TYPE IN('PRIMARY','CHECKING','SAVING','CREDIT','CURRENCY')),
	AMOUNT NUMBER CONSTRAINT N_AMOUNT NOT NULL, CONSTRAINT AMOUNT_CHECK CHECK(AMOUNT >= 0),
	EXTRA_FEE NUMBER DEFAULT 0, CONSTRAINT EXTRA_FEE_CHECK CHECK(EXTRA_FEE >= 0),
	ACCOUNT_OPENED_ON DATE DEFAULT sysdate,
	ACCOUNT_UPDATED_ON DATE DEFAULT sysdate
);

-- CHECKING ACCOUNT
CREATE TABLE CHECKING_ACCOUNT
(
	ACCOUNT_NUM NUMBER(10) NOT NULL,
    CONSTRAINT FK_CHECKING_ACCOUNT_NUM FOREIGN KEY (ACCOUNT_NUM) REFERENCES ACCOUNT(ACCOUNT_NUM) ON DELETE CASCADE,
	TRAC_LIMIT NUMBER DEFAULT 0, CONSTRAINT TRAC_LIMIT_CHECK CHECK(TRAC_LIMIT >= 0)
);

-- SAVING ACCOUNT
CREATE TABLE SAVING_ACCOUNT
(
	ACCOUNT_NUM NUMBER(10) NOT NULL,
    CONSTRAINT FK_SAVING_ACCOUNT_NUM FOREIGN KEY (ACCOUNT_NUM) REFERENCES ACCOUNT(ACCOUNT_NUM) ON DELETE CASCADE,
	INTEREST_RATE NUMBER DEFAULT 0, CONSTRAINT INTEREST_RATE_CHECK CHECK(INTEREST_RATE >= 0),
	ANNUAL_GAIN NUMBER DEFAULT 0, CONSTRAINT ANNUAL_GAIN_CHECK CHECK(ANNUAL_GAIN >= 0)
);

-- CREDIT ACCOUNT
CREATE TABLE CREDIT_ACCOUNT
(
	ACCOUNT_NUM NUMBER(10) NOT NULL,
    CONSTRAINT FK_CREDIT_ACCOUNT_NUM FOREIGN KEY (ACCOUNT_NUM) REFERENCES ACCOUNT(ACCOUNT_NUM) ON DELETE CASCADE,
	AMOUNT_AVAILABLE NUMBER CONSTRAINT N_AMT_AVAILABLE NOT NULL
);

-- CURRENCY ACCOUNT
CREATE TABLE CURRENCY_ACCOUNT
(
	ACCOUNT_NUM NUMBER(10) NOT NULL,
    CONSTRAINT FK_CURRENCY_ACCOUNT_NUM FOREIGN KEY (ACCOUNT_NUM) REFERENCES ACCOUNT(ACCOUNT_NUM) ON DELETE CASCADE,
	CURRENCY_TYPE VARCHAR2(3) CONSTRAINT N_CURRENCY_TYPE NOT NULL, CONSTRAINT CURRENCY_TYPE CHECK(CURRENCY_TYPE IN('USD','INR','GBP'))
);

-- TRANSACTIONS
CREATE TABLE TRANSACTIONS
(
	TRANSACTION_ID NUMBER(10) CONSTRAINT PK_TRA_ID PRIMARY KEY,
	FROM_ACC_NUM NUMBER(10) NOT NULL,
    CONSTRAINT FK_FROM_ACC_NUM FOREIGN KEY (FROM_ACC_NUM) REFERENCES ACCOUNT(ACCOUNT_NUM) ON DELETE CASCADE,
	TO_ACC_NUM NUMBER(10) NOT NULL,
    CONSTRAINT FK_TO_ACC_NUM FOREIGN KEY (TO_ACC_NUM) REFERENCES ACCOUNT(ACCOUNT_NUM) ON DELETE CASCADE,
	TRANSFER_TYPE VARCHAR2(20) CONSTRAINT N_TRANSFER_TYPE NOT NULL, CONSTRAINT TRANSFER_TYPE CHECK(TRANSFER_TYPE IN('DEPOSIT','WITHDRAW')),
	AMOUNT NUMBER CONSTRAINT N_TRAC_AMT NOT NULL, CONSTRAINT TRAC_AMT_CHECK CHECK(AMOUNT > 0),
	DESCRIPTION  VARCHAR2(255) CONSTRAINT TRAC_DESCRIPTION NOT NULL,
	TRANSACTION_DATE DATE DEFAULT sysdate
);